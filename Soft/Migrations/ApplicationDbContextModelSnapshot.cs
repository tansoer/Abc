// <auto-generated />
using System;
using Abc.Soft.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Abc.Soft.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Abc.Data.Classifiers.ClassifierData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClassifierType")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Classifiers", "Classifier");
                });

            modelBuilder.Entity("Abc.Data.Common.ManagerData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderManagers", "Order");
                });

            modelBuilder.Entity("Abc.Data.Currencies.CardAssociationData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CardAssociations", "Currency");
                });

            modelBuilder.Entity("Abc.Data.Currencies.CountryData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIsoCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoyaltyProgram")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumericCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries", "Party");
                });

            modelBuilder.Entity("Abc.Data.Currencies.CurrencyData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIsoCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("MajorUnitSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinorUnitSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumericCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RatioOfMinorUnit")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Currencies", "Currency");
                });

            modelBuilder.Entity("Abc.Data.Currencies.CurrencyUsageData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyNativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CurrencyUsages", "Currency");
                });

            modelBuilder.Entity("Abc.Data.Currencies.ExchangeRateData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("RateTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rates", "Currency");
                });

            modelBuilder.Entity("Abc.Data.Currencies.ExchangeRuleData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RateTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RateRules", "Currency");
                });

            modelBuilder.Entity("Abc.Data.Currencies.PaymentData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateDue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromPaymentMethodId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ToPaymentMethodId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderPayments", "Order");
                });

            modelBuilder.Entity("Abc.Data.Currencies.PaymentMethodData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BillingOrBankAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardAssociationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardOrCheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DailyLimit")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssueOrBankIdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMethodType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods", "Currency");
                });

            modelBuilder.Entity("Abc.Data.Currencies.RateTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RateTypes", "Currency");
                });

            modelBuilder.Entity("Abc.Data.Inventory.CapacityManagerData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CapacityManagers", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Inventory.InventoryData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Inventories", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Inventory.InventoryEntryData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CapacityManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InventoryEntryType")
                        .HasColumnType("int");

                    b.Property<string>("InventoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RestockPolicyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InventoryEntries", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Inventory.OutstandingOrderData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryEntryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseOrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OutstandingOrders", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Inventory.ReservationData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CancellationPolicyRuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationRequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Reservations", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Inventory.ReservationReceiverData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverPartySummaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReservationRequestId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReservationReceivers", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Inventory.ReservationRequestData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumberRequested")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequesterPartySummaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleOverridesId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReservationRequests", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Inventory.RestockPolicyData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RestockRuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestockRuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RestockPolicies", "Inventory");
                });

            modelBuilder.Entity("Abc.Data.Orders.DeliveryTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DeliveryTypes", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.DiscountData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountType")
                        .HasColumnType("int");

                    b.Property<string>("DiscountTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discounts", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.DiscountTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EligibilityRuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DiscountTypes", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.InvoiceData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Invoices", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.OrderData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateSentReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountRuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseOrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesChannelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.OrderEventData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorizedPartySignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldOrderLineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldPartySummaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldTermsAndConditionsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderEventType")
                        .HasColumnType("int");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderLineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartySummaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDeliveryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("TermsAndConditionsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderEvents", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.OrderLineData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpectedDelivery")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAssessed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfProducts")
                        .HasColumnType("int");

                    b.Property<string>("OrderEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderLineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderLineType")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesTaxPolicyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderLines", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.OrderLineItemData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderLineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderLineType")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderLineItems", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.OrderStatusData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.ProductDeliveryData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductDeliveries", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.ReturnedItemData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderEventId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReturnedItems", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.SalesTaxPolicyData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TaxationRate")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("TaxationTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SalesTaxPolicies", "Order");
                });

            modelBuilder.Entity("Abc.Data.Orders.TermsAndConditionsData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TermsAndConditions", "Order");
                });

            modelBuilder.Entity("Abc.Data.Parties.AuthenticationData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthenticationProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartyAuthentications", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.BodyMetricData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetricType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BodyMetrics", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.BodyMetricTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BodyMetricTypes", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.DeviceRegistrationData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("TelecomDeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TelecomDeviceRegistrations", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.NamePrefixData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrefixTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonNamePrefixes", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.NameSuffixData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Index")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("SuffixTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonNameSuffixes", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PartyContactData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CityOrAreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactType")
                        .HasColumnType("int");

                    b.Property<string>("CountryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Device")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalDirectDialingPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionOrStateOrCountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartyContacts", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PartyContactUsageData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartyContactUsages", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PartyData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Parties", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PartyNameData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NameType")
                        .HasColumnType("int");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyType")
                        .HasColumnType("int");

                    b.Property<string>("PreferredName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartyNames", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PartyNameUseData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyNameId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartyNameUses", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PartySignatureData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyAuthenticationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartySummaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("SignedEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedEntityTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartySignatures", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PartySummaryData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderLineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartySummaryRoleClassifierId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleInOrder")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartySummaries", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PersonEthnicityData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EthnicityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PersonEthnicities", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PreferenceData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceOptionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Preferences", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.PreferenceOptionData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferenceTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PreferenceOptions", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.RegisteredIdentifierData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisteredIdentifierTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationAuthorityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Identifiers", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.RegistrationAuthorityData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AuthorityTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RegistrationAuthorities", "Party");
                });

            modelBuilder.Entity("Abc.Data.Parties.SignedEntityTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SignedEntityTypes", "Party");
                });

            modelBuilder.Entity("Abc.Data.Processes.ActionApproverData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApproverSignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ActionApprovers", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.ActionData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionStatusClassifierId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorSignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Actions", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.ActionTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ActionTypes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.AttributeTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AttributeTypes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.AttributeValueData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttributeTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Equality")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AttributeValues", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.OutcomeApproverData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApproverSignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutcomeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OutcomeApprovers", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.OutcomeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPossibleOutcome")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutcomeTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Outcomes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.OutcomeTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OutcomeTypes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.ProcessData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorPartyRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerPartyRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityClassifierId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Processes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.ProcessTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProcessTypes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.TaskData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromPartyAddressId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEscalation")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationshipTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreadId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ToPartyAddressId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tasks", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.TaskParticipantData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaskParticipants", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.TaskTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreadTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaskTypes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.ThreadData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminatorSignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThreadTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Threads", "Process");
                });

            modelBuilder.Entity("Abc.Data.Processes.ThreadTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ThreadTypes", "Process");
                });

            modelBuilder.Entity("Abc.Data.Products.BatchCheckedByData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartySignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BatchCheckedByParties", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.BatchData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BestBefore")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateProduced")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SellBy")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("UseBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Batches", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.CatalogedProductData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CatalogEntryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CatalogedProducts", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.CatalogEntryData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CatalogId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CatalogEntries", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ContainerItemData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ColumnNumber")
                        .HasColumnType("tinyint");

                    b.Property<string>("ContainerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("LevelNumber")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte>("RowNumber")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContainerItems", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.FeatureData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValueSpecId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Features", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.FeatureSpecData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FeatureSpecs", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.FeatureTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("MustSatisfyAll")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumericCode")
                        .HasColumnType("int");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("ValueType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FeatureTypes", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.PackageComponentData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PackageComponents", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.PackageContentData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComponentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PackageContents", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.PossibleFeatureValueData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Relation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValueSpecId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PossibleFeatureValues", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.PriceData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(16,4)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PossiblePriceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleOverrideId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Prices", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.PriceEndorsementData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartySignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PriceEndorsements", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductCatalogData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductCatalogs", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductCategoryData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BatchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveredFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveredTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryStatus")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductKind")
                        .HasColumnType("int");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledTo")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductInclusionRuleData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InclusionKind")
                        .HasColumnType("int");

                    b.Property<double>("MaximumAmount")
                        .HasColumnType("float");

                    b.Property<double>("MinimumAmount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductInclusionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductInclusions", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductRelationshipData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationshipTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductRelationships", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductRelationshipTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductRelationshipTypes", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductSetContentData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductSetContents", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductSetData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductSets", "Product");
                });

            modelBuilder.Entity("Abc.Data.Products.ProductTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AlternativeCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ColumnsCount")
                        .HasColumnType("tinyint");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBaseType")
                        .HasColumnType("bit");

                    b.Property<byte>("LevelsCount")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PeriodOfOperationFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PeriodOfOperationTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("PricingStrategy")
                        .HasColumnType("int");

                    b.Property<int>("ProductKind")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte>("RowsCount")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes", "Product");
                });

            modelBuilder.Entity("Abc.Data.Quantities.CommonTermData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MasterId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Power")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("TermId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CommonTerms", "Quantity");
                });

            modelBuilder.Entity("Abc.Data.Quantities.MeasureData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MeasureType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Measures", "Quantity");
                });

            modelBuilder.Entity("Abc.Data.Quantities.SystemOfUnitsData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SystemsOfUnits", "Quantity");
                });

            modelBuilder.Entity("Abc.Data.Quantities.UnitData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Units", "Quantity");
                });

            modelBuilder.Entity("Abc.Data.Quantities.UnitFactorData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Factor")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemOfUnitsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitFactors", "Quantity");
                });

            modelBuilder.Entity("Abc.Data.Quantities.UnitRulesData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FromBaseUnitRuleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemOfUnitsId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ToBaseUnitRuleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitRules", "Quantity");
                });

            modelBuilder.Entity("Abc.Data.Roles.AssignedResponsibilityData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyRoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartySignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponsibilityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignedResponsibilities", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.PartyCapabilityData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PartyCapabilities", "Party");
                });

            modelBuilder.Entity("Abc.Data.Roles.PartyRelationshipData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationshipTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Relationships", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.PartyRelationshipTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RelationshipTypes", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.PartyRoleConstraintData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyRoleTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleConstraintTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoleConstraints", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.PartyRoleConstraintTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoleConstraintTypes", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.PartyRoleData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyRoleTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.RelationshipConstraintData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstraintTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationshipTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RelationshipConstraints", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.RelationshipConstraintTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsumerRoleTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderRoleTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RelationshipConstraintTypes", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.ResponsibilityData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyRoleTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponsibilityTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Responsibilities", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.ResponsibilityTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionsOfSatisfactionRuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequirementsRuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ResponsibilityTypes", "Role");
                });

            modelBuilder.Entity("Abc.Data.Roles.RoleTypeData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoleTypes", "Role");
                });

            modelBuilder.Entity("Abc.Data.Rules.RuleContextData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RuleContexts", "Rule");
                });

            modelBuilder.Entity("Abc.Data.Rules.RuleData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuleKind")
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rules", "Rule");
                });

            modelBuilder.Entity("Abc.Data.Rules.RuleElementData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Operation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuleElementType")
                        .HasColumnType("int");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UnitOrCurrencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RuleElements", "Rule");
                });

            modelBuilder.Entity("Abc.Data.Rules.RuleOverrideData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyAuthenticationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartySummaryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleContextId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedEntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignedEntityTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariableId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RuleOverrides", "Rule");
                });

            modelBuilder.Entity("Abc.Data.Rules.RuleSetData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RuleSets", "Rule");
                });

            modelBuilder.Entity("Abc.Data.Rules.RuleUsageData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Recorded")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordedWhy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Replaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("RuleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RuleSetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RuleUsages", "Rule");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Abc.Data.Processes.AttributeValueData", b =>
                {
                    b.OwnsOne("Abc.Data.Common.ValueData", "Value", b1 =>
                        {
                            b1.Property<string>("AttributeValueDataId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("UnitOrCurrencyId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("ValidFrom")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("ValidTo")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ValueType")
                                .HasColumnType("int");

                            b1.HasKey("AttributeValueDataId");

                            b1.ToTable("AttributeValues", "Process");

                            b1.WithOwner()
                                .HasForeignKey("AttributeValueDataId");
                        });

                    b.Navigation("Value");
                });

            modelBuilder.Entity("Abc.Data.Products.FeatureSpecData", b =>
                {
                    b.OwnsOne("Abc.Data.Common.ValueData", "Value", b1 =>
                        {
                            b1.Property<string>("FeatureSpecDataId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("UnitOrCurrencyId")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("ValidFrom")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("ValidTo")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("ValueType")
                                .HasColumnType("int");

                            b1.HasKey("FeatureSpecDataId");

                            b1.ToTable("FeatureSpecs", "Product");

                            b1.WithOwner()
                                .HasForeignKey("FeatureSpecDataId");
                        });

                    b.Navigation("Value");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
