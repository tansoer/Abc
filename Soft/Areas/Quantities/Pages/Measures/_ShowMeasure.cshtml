@using Abc.Aids.Reflection
@using Abc.Facade.Quantities
@using Abc.Pages.Common.Aids
@using Abc.Pages.Common.Consts
@using Abc.Pages.Common.Extensions
@model Abc.Pages.Quantities.MeasuresPage

<body>
    @if (Model.MeasureTerms.Count != 0 && Model.Item.MeasureType == Abc.Data.Quantities.MeasureType.Derived) {
        <h3>Terms for Selected Measure </h3>
        <table class="table">
            <tr>
                <th>@(GetMember.DisplayName<MeasureTermView>(x => x.MasterId))</th>
                <th>@(GetMember.DisplayName<MeasureTermView>(x => x.TermId))</th>
                <th>@(GetMember.DisplayName<MeasureTermView>(x => x.Power))</th>
                <th>@(GetMember.DisplayName<MeasureTermView>(x => x.ValidFrom))</th>
                <th>@(GetMember.DisplayName<MeasureTermView>(x => x.ValidTo))</th>
            </tr>

            @foreach (var item in Model.MeasureTerms)
            {
                <tr>
                    <td> @Html.DisplayFor(modelItem => item.MasterId) </td>
                    <td> @Html.DisplayFor(modelItem => item.TermId) </td>
                    <td> @Html.DisplayFor(modelItem => item.Power) </td>
                    <td> @Html.DisplayFor(modelItem => item.ValidFrom) </td>
                    <td> @Html.DisplayFor(modelItem => item.ValidTo) </td>
                </tr>
            }

        </table>
    }
    @if (Model.Units.Count != 0) {
        <h3>Units for Selected Measure </h3>
        <table class="table">
            <tr>
                <th>@(GetMember.DisplayName<UnitView>(x => x.Name))</th>
                <th>@(GetMember.DisplayName<UnitView>(x => x.Code))</th>
                <th>@(GetMember.DisplayName<UnitView>(x => x.Details))</th>
                <th>@(GetMember.DisplayName<UnitView>(x => x.Formula))</th>
                <th>@(GetMember.DisplayName<UnitView>(x => x.ValidFrom))</th>
                <th>@(GetMember.DisplayName<UnitView>(x => x.ValidTo))</th>
            </tr>

            @foreach (var item in Model.Units)
            {
                <tr>
                    <td> @Html.DisplayFor(modelItem => item.Name) </td>
                    <td> @Html.DisplayFor(modelItem => item.Code) </td>
                    <td> @Html.DisplayFor(modelItem => item.Details) </td>
                    <td> @Html.DisplayFor(modelItem => item.Formula) </td>
                    <td> @Html.DisplayFor(modelItem => item.ValidFrom) </td>
                    <td> @Html.DisplayFor(modelItem => item.ValidTo) </td>
                </tr>
            }
        </table>
    }
</body>
